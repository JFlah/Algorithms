import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);
        
        int length = sc.nextInt();
        
        StringBuilder sb = new StringBuilder();
        
        while (sc.hasNext()) {
            sb.append(sc.next());
            sb.append(" ");
        }
        
        String[] strAr = sb.toString().split(" ");
        int[] intAr = new int[length];
        
        for (int i = 0; i < length; i++) {
            intAr[i] = Integer.parseInt(strAr[i]);
        }
        quicksort(intAr, 0, intAr.length-1);
    }
    
    public static void quicksort(int[] ar, int start, int end) {
        if ((end-start) >= 1) {
            int newPivot = partition(ar, start, end);

            // print array
            for (int i = 0; i < ar.length; i++) {
                if (i == ar.length-1) {
                    System.out.print(Integer.toString(ar[i]));
                    continue;
                }
                System.out.print(Integer.toString(ar[i]) + " ");
            }
            System.out.println();

            quicksort(ar, start, newPivot-1);
            quicksort(ar, newPivot+1, end);
        }
    }

    public static int partition(int[] ar, int start, int end) {
        int pivot = ar[end];
        int beginningIndex = start;

        for (int current = start; current < end; ++current) {
            if (ar[current] < pivot) {
                swap(ar, beginningIndex, current);
                ++beginningIndex;
            }
        }
        swap(ar, beginningIndex, end);
        return beginningIndex;
    }

    public static void swap(int[] ar, int a, int b) {
        int tmp = ar[a];
        ar[a] = ar[b];
        ar[b] = tmp;
    }
}